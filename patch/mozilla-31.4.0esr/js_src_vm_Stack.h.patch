--- ff-orig/mozilla-31.4.0esr/js/src/vm/Stack.h	2015-01-05 23:08:07.000000000 -0600
+++ ff-dev/mozilla-31.4.0esr/js/src/vm/Stack.h	2015-02-02 18:18:32.928462645 -0600
@@ -11,6 +11,9 @@
 
 #include "jsfun.h"
 #include "jsscript.h"
+#ifdef TxJS
+#include "jstx.h"
+#endif
 
 #include "jit/AsmJSLink.h"
 #include "jit/JitFrameIterator.h"
@@ -362,6 +365,13 @@
     Value               *prevsp_;
 
     void                *hookData_;     /* if HAS_HOOK_DATA, closure returned by call hook */
+#ifdef TxJS
+    // When the handler is called on suspend or at the end of a
+    // transaction, the transaction object is saved here. When this
+    // frame returns, we know to resume or terminate the transaction
+    // (depending on the transaction state).
+    TxContext           *suspendedTx_;
+#endif
 
     /*
      * For an eval-in-frame DEBUGGER frame, the frame in whose scope we're
@@ -742,6 +752,15 @@
 
     inline JSCompartment *compartment() const;
 
+#ifdef TxJS
+    inline TxContext *suspendedTx() const {
+        return (suspendedTx_ && suspendedTx_->inState(TX_SUSPEND1 | TX_END1)) ? suspendedTx_ : nullptr;
+    }
+    inline void setSuspendedTx(TxContext *tx) {
+        suspendedTx_ = tx;
+    }
+#endif
+
     /* Debugger hook data */
 
     bool hasHookData() const {

