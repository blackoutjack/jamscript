--- ff-orig/mozilla-31.4.0esr/js/src/jsapi.h	2015-01-05 23:08:03.000000000 -0600
+++ ff-dev/mozilla-31.4.0esr/js/src/jsapi.h	2015-02-16 22:43:11.617621053 -0600
@@ -1003,7 +1003,14 @@
  */
 #define JSFUN_GENERIC_NATIVE   0x800
 
+#ifdef TxJS
+#define JSFUN_TX_NOSUSPEND     0x1000   /* indicates that a call to this
+                                           function should not suspend
+                                           an active transaction */
+#define JSFUN_FLAGS_MASK       0x1e00   /* | of all the JSFUN_* flags */
+#else
 #define JSFUN_FLAGS_MASK       0xe00    /* | of all the JSFUN_* flags */
+#endif
 
 /*
  * The first call to JS_CallOnce by any thread in a process will call 'func'.
@@ -1036,6 +1043,11 @@
 extern JS_PUBLIC_API(JSString *)
 JS_GetEmptyString(JSRuntime *rt);
 
+#ifdef TxJS
+extern JS_PUBLIC_API(jsval)
+JS_GetIntrospector(JSContext *cx);
+#endif
+
 /*
  * Format is a string of the following characters (spaces are insignificant),
  * specifying the tabulated type conversions:
@@ -3446,6 +3458,9 @@
     const char *filename_;
     const char *introducerFilename_;
     const jschar *sourceMapURL_;
+#ifdef TxJS
+    Value introspector_;
+#endif
 
     // This constructor leaves 'version' set to JSVERSION_UNKNOWN. The structure
     // is unusable until that's set to something more specific; the derived
@@ -3456,6 +3471,9 @@
         filename_(nullptr),
         introducerFilename_(nullptr),
         sourceMapURL_(nullptr),
+#ifdef TxJS
+        introspector_(UndefinedValue()),
+#endif
         version(JSVERSION_UNKNOWN),
         versionSet(false),
         utf8(false),
@@ -3491,6 +3509,9 @@
     const char *filename() const { return filename_; }
     const char *introducerFilename() const { return introducerFilename_; }
     const jschar *sourceMapURL() const { return sourceMapURL_; }
+#ifdef TxJS
+    const Value getIntrospector() const { return introspector_; }
+#endif
     virtual JSObject *element() const = 0;
     virtual JSString *elementAttributeName() const = 0;
     virtual JSScript *introductionScript() const = 0;
@@ -3573,6 +3594,9 @@
     bool setIntroducerFilename(JSContext *cx, const char *s);
 
     /* These setters are infallible, and can be chained. */
+#ifdef TxJS
+    OwningCompileOptions &setIntrospector(const Value &ispect) { introspector_ = ispect; return *this; }
+#endif
     OwningCompileOptions &setLine(unsigned l)             { lineno = l;              return *this; }
     OwningCompileOptions &setElement(JSObject *e) {
         elementRoot = e;
@@ -3650,6 +3674,9 @@
         originPrincipals_ = rhs.originPrincipals_;
         filename_ = rhs.filename();
         sourceMapURL_ = rhs.sourceMapURL();
+#ifdef TxJS
+        introspector_ = rhs.getIntrospector();
+#endif
         elementRoot = rhs.element();
         elementAttributeNameRoot = rhs.elementAttributeName();
         introductionScriptRoot = rhs.introductionScript();
@@ -3665,6 +3692,9 @@
         filename_ = f; lineno = l; return *this;
     }
     CompileOptions &setSourceMapURL(const jschar *s) { sourceMapURL_ = s;       return *this; }
+#ifdef TxJS
+    CompileOptions &setIntrospector(const Value &ispect) { introspector_ = ispect; return *this; }
+#endif
     CompileOptions &setElement(JSObject *e)          { elementRoot = e;         return *this; }
     CompileOptions &setElementAttributeName(JSString *p) {
         elementAttributeNameRoot = p;

