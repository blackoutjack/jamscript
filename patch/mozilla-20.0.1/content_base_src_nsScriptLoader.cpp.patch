--- ff-orig/mozilla-20.0.1/content/base/src/nsScriptLoader.cpp	2013-04-09 22:01:23.000000000 -0500
+++ ff-dev/mozilla-20.0.1/content/base/src/nsScriptLoader.cpp	2015-01-19 21:29:36.682737411 -0600
@@ -47,6 +47,9 @@
 
 #include "mozilla/CORSMode.h"
 #include "mozilla/Attributes.h"
+#ifdef TxJS
+#include "nsDocLoader.h"
+#endif
 
 #ifdef PR_LOGGING
 static PRLogModuleInfo* gCspPRLog;
@@ -69,6 +72,9 @@
       mIsInline(true),
       mJSVersion(aVersion),
       mLineNo(1),
+#ifdef TxJS
+      mIntrospector(JS::UndefinedValue()),
+#endif
       mCORSMode(aCORSMode)
   {
   }
@@ -98,6 +104,9 @@
   nsCOMPtr<nsIPrincipal> mOriginPrincipal;
   int32_t mLineNo;
   const CORSMode mCORSMode;
+#ifdef TxJS
+  JS::Value mIntrospector;
+#endif
 };
 
 // The nsScriptLoadRequest is passed as the context to necko, and thus
@@ -114,6 +123,9 @@
     mBlockerCount(0),
     mEnabled(true),
     mDeferEnabled(false),
+#ifdef TxJS
+    mIntrospector(JS::UndefinedValue()),
+#endif
     mDocumentParsingDone(false)
 {
   // enable logging for CSP
@@ -545,6 +557,14 @@
     request->mJSVersion = version;
 
     if (aElement->GetScriptAsync()) {
+#ifdef TxJS
+      JSContext *cx = nullptr;
+      cx = globalObject->GetScriptContext()->GetNativeContext();
+      JS::Value ispect = JS_GetIntrospector(cx);
+      if (!ispect.isUndefined()) {
+        request->mIntrospector = ispect;
+      }
+#endif
       mAsyncRequests.AppendElement(request);
       if (!request->mLoading) {
         // The script is available already. Run it ASAP when the event
@@ -668,6 +688,24 @@
   request->mURI = mDocument->GetDocumentURI();
   request->mLineNo = aElement->GetScriptLineNumber();
 
+#ifdef TxJS
+  /*
+  JSContext *cx = nullptr;
+  cx = globalObject->GetScriptContext()->GetNativeContext();
+  JS::Value ispect = JS_GetIntrospector(cx);
+  if (ispect.isUndefined()) {
+    nsIDocShell *ds = ((nsPIDOMWindow*)globalObject)->GetDocShell();
+    nsDocLoader *dl = (nsDocLoader*)ds;
+    if (false && !dl->introspector.isUndefined()) {
+      ispect = dl->introspector;
+    }
+  }
+  */
+  if (!mIntrospector.isUndefined()) {
+    request->mIntrospector = mIntrospector;
+  }
+#endif
+
   if (aElement->GetParserCreated() == FROM_PARSER_XSLT &&
       (!ReadyToExecuteScripts() || !mXSLTRequests.IsEmpty())) {
     // Need to maintain order for XSLT-inserted scripts
@@ -856,12 +894,22 @@
   nsContentUtils::GetWrapperSafeScriptFilename(mDocument, aRequest->mURI, url);
 
   bool isUndefined;
+#ifdef TxJS
+  rv = context->EvaluateString(aScript, globalObject->GetGlobalJSObject(),
+                               mDocument->NodePrincipal(),
+                               aRequest->mOriginPrincipal,
+                               url.get(), aRequest->mLineNo,
+                               JSVersion(aRequest->mJSVersion), nullptr,
+                               &isUndefined,
+                               aRequest->mIntrospector);
+#else
   rv = context->EvaluateString(aScript, globalObject->GetGlobalJSObject(),
                                mDocument->NodePrincipal(),
                                aRequest->mOriginPrincipal,
                                url.get(), aRequest->mLineNo,
                                JSVersion(aRequest->mJSVersion), nullptr,
                                &isUndefined);
+#endif
 
   // Put the old script back in case it wants to do anything else.
   mCurrentScript = oldCurrent;

