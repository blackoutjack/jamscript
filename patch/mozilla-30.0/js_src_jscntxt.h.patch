--- ff-orig/mozilla-30.0/js/src/jscntxt.h	2014-06-05 20:15:28.000000000 -0500
+++ ff-dev/mozilla-30.0/js/src/jscntxt.h	2015-01-25 17:34:28.986843155 -0600
@@ -422,6 +422,51 @@
     /* Per-context options. */
     JS::ContextOptions  options_;
 
+#ifdef TxJS
+  private:
+    /* Tx data */
+    TxContext *tx_;
+
+    inline TxContext *getTxInState(int state) {
+        TxContext *tx = tx_;
+        while (tx != NULL) {
+            if (tx->inState(state))
+                break;
+            tx = tx->getNext();
+        }
+        return tx;
+    }
+
+  public:
+    inline TxContext *getRunningTx() {
+        return getTxInState(TX_RUNNING);
+    }
+    inline TxContext *getClosingTx() {
+        return getTxInState(TX_RUNNING | TX_DUMMY);
+    }
+    inline TxContext *getSuspendingTx() {
+        return getTxInState(TX_SUSPEND0 | TX_END0);
+    }
+    inline TxContext *getSuspendedTx() {
+        return getTxInState(TX_SUSPEND1 | TX_END1);
+    }
+
+    inline TxContext *getTxContext() { return tx_; }
+    // Return the new transaction to simplify jsinterp.cpp.
+    inline TxContext *setTxContext(TxContext *tx) { tx_ = tx; return tx_; }
+
+    inline const js::Value getIntrospector() {
+        if (currentlyRunningInInterpreter()) {
+            return interpreterFrame()->script()->getIntrospector();
+        }
+        return JS::UndefinedValue();
+    }
+    inline void setIntrospector(const js::Value &ispect) {
+        JS_ASSERT(currentlyRunningInInterpreter());
+        interpreterFrame()->script()->setIntrospector(ispect);
+    }
+#endif
+
   public:
     int32_t             reportGranularity;  /* see vm/Probes.h */
 

