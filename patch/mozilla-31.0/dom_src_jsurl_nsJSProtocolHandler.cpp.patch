--- ff-orig/mozilla-31.0/dom/src/jsurl/nsJSProtocolHandler.cpp	2014-07-16 20:45:12.000000000 -0500
+++ ff-dev/mozilla-31.0/dom/src/jsurl/nsJSProtocolHandler.cpp	2015-01-25 20:04:29.350580000 -0600
@@ -65,6 +65,9 @@
                             PopupControlState aPopupState,
                             uint32_t aExecutionPolicy,
                             nsPIDOMWindow *aOriginalInnerWindow);
+#ifdef TxJS
+    JS::Value mIntrospector;
+#endif
 
 protected:
     virtual ~nsJSThunk();
@@ -100,6 +103,10 @@
     rv = uri->GetSpec(mURL);
     if (NS_FAILED(rv)) return rv;
 
+#ifdef TxJS
+    mIntrospector = JS::UndefinedValue();
+#endif
+
     return NS_OK;
 }
 
@@ -314,6 +321,9 @@
                .setVersion(JSVERSION_DEFAULT);
         nsJSUtils::EvaluateOptions evalOptions;
         evalOptions.setCoerceToString(true);
+#ifdef TxJS
+        options->mIntrospector = mIntrospector;
+#endif
         rv = nsJSUtils::EvaluateString(cx, NS_ConvertUTF8toUTF16(script),
                                        globalJSObject, options, evalOptions, &v);
 
@@ -427,6 +437,9 @@
     bool                    mIsAsync;
     bool                    mIsActive;
     bool                    mOpenedStreamChannel;
+#ifdef TxJS
+    JS::Value mIntrospector;
+#endif
 };
 
 nsJSChannel::nsJSChannel() :
@@ -437,6 +450,9 @@
     mExecutionPolicy(EXECUTE_IN_SANDBOX),
     mIsAsync(true),
     mIsActive(false),
+#ifdef TxJS
+    mIntrospector(JS::UndefinedValue()),
+#endif
     mOpenedStreamChannel(false)
 {
 }
@@ -505,6 +521,22 @@
                   nsIStreamListener, nsIScriptChannel, nsIPropertyBag,
                   nsIPropertyBag2)
 
+#ifdef TxJS
+NS_IMETHODIMP
+nsJSChannel::GetIntrospector(JS::Value *aIntrospector)
+{
+    *aIntrospector = mIntrospector;
+    return NS_OK;
+}
+
+NS_IMETHODIMP
+nsJSChannel::SetIntrospector(const JS::Value &aIntrospector)
+{
+    mIntrospector = aIntrospector;
+    return NS_OK;
+}
+#endif
+
 //
 // nsIRequest implementation...
 //
@@ -618,6 +650,17 @@
 
     mIsActive = true;
 
+#ifdef TxJS
+    nsCOMPtr<nsIScriptContext> scriptContext = global->GetContext();
+    if (scriptContext) {
+        JSContext* cx = scriptContext->GetNativeContext();
+        JS::Value ispect = JS_GetIntrospector(cx);
+        if (!ispect.isUndefined()) {
+            SetIntrospector(ispect);
+        }
+    }
+#endif
+
     // Temporarily set the LOAD_BACKGROUND flag to suppress load group observer
     // notifications (and hence nsIWebProgressListener notifications) from
     // being dispatched.  This is required since we suppress LOAD_DOCUMENT_URI,
@@ -716,6 +759,9 @@
     // script returns it).
     
     if (NS_SUCCEEDED(mStatus)) {
+#ifdef TxJS
+        GetIntrospector(&mIOThunk->mIntrospector);
+#endif
         nsresult rv = mIOThunk->EvaluateScript(mStreamChannel, mPopupState,
                                                mExecutionPolicy,
                                                mOriginalInnerWindow);

