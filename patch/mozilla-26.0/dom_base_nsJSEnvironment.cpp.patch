--- ff-orig/mozilla-26.0/dom/base/nsJSEnvironment.cpp	2013-12-05 10:07:27.000000000 -0600
+++ ff-dev/mozilla-26.0/dom/base/nsJSEnvironment.cpp	2015-01-24 15:09:23.429623880 -0600
@@ -974,6 +974,18 @@
 
   return refcnt;
 }
+nsresult
+nsJSContext::EvaluateString(const nsAString& aScript,
+                            JS::Handle<JSObject*> aScopeObject,
+                            JS::CompileOptions& aCompileOptions,
+                            bool aCoerceToString,
+                            JS::Value* aRetValue,
+                            void **aOffThreadToken)
+{
+#ifdef TxJS
+  return EvaluateString(aScript, aScopeObject, aCompileOptions,
+      aCoerceToString, aRetValue, JS::UndefinedValue());
+}
 
 nsresult
 nsJSContext::EvaluateString(const nsAString& aScript,
@@ -981,8 +993,10 @@
                             JS::CompileOptions& aCompileOptions,
                             bool aCoerceToString,
                             JS::Value* aRetValue,
+                            const JS::Value &ispect,
                             void **aOffThreadToken)
 {
+#endif
   NS_ENSURE_TRUE(mIsInitialized, NS_ERROR_NOT_INITIALIZED);
   if (!mScriptsEnabled) {
     return NS_OK;
@@ -991,6 +1005,9 @@
   AutoCxPusher pusher(mContext);
   nsJSUtils::EvaluateOptions evalOptions;
   evalOptions.setCoerceToString(aCoerceToString);
+#ifdef TxJS
+  aCompileOptions.introspector = ispect;
+#endif
   return nsJSUtils::EvaluateString(mContext, aScript, aScopeObject,
                                    aCompileOptions, evalOptions, aRetValue,
                                    aOffThreadToken);

