--- ff-orig/mozilla-19.0.2/js/src/jsapi.cpp	2013-03-07 04:48:48.000000000 -0600
+++ ff-dev/mozilla-19.0.2/js/src/jsapi.cpp	2015-01-19 19:02:56.630994710 -0600
@@ -53,6 +53,10 @@
 #include "jswrapper.h"
 #include "jstypedarray.h"
 #include "jsxml.h"
+#ifdef TxJS
+#include "jsjam.h"
+#include "jstransaction.h"
+#endif
 
 #include "builtin/Eval.h"
 #include "builtin/Intl.h"
@@ -1810,6 +1814,12 @@
 #if ENABLE_INTL_API
     {js_InitIntlClass,                  EAGER_ATOM_AND_CLASP(Intl)},
 #endif
+#ifdef TxJS
+    /* %%% What does the EAGER_ATOM_AND_CLASP mean? 
+       %%% Convert to &js::Tx::class_ following pattern. */
+    {js_InitTxClass,                    EAGER_CLASS_ATOM(Tx), &TxClass},
+    {js_InitJAMClass,                   EAGER_CLASS_ATOM(JAM), &JAMClass},
+#endif
     {NULL,                              0, NULL}
 };
 
@@ -3523,6 +3533,14 @@
     return true;
 }
 
+#ifdef TxJS
+JS_PUBLIC_API(jsval)
+JS_GetIntrospector(JSContext *cx)
+{
+  return cx->getIntrospector();
+}
+#endif
+
 static JSBool
 LookupPropertyById(JSContext *cx, HandleObject obj, HandleId id, unsigned flags,
                    MutableHandleObject objp, MutableHandleShape propp)
@@ -3804,7 +3822,6 @@
             JSFunction *setobj = JS_NewFunction(cx, (Native) setter, 1, 0, global, NULL);
             if (!setobj)
                 return false;
-
             if (set.info)
                 setobj->setJitInfo(set.info);
 
@@ -5005,7 +5022,6 @@
                 if (!ctor)
                     return JS_FALSE;
             }
-
             flags &= ~JSFUN_GENERIC_NATIVE;
             JSFunction *fun = js_DefineFunction(cx, ctor, id, js_generic_native_method_dispatcher,
                                     fs->nargs + 1, flags, NullPtr(),
@@ -5205,6 +5221,9 @@
       compileAndGo(cx->hasRunOption(JSOPTION_COMPILE_N_GO)),
       noScriptRval(cx->hasRunOption(JSOPTION_NO_SCRIPT_RVAL)),
       selfHostingMode(false),
+#ifdef TxJS
+      introspector(JS::UndefinedValue()),
+#endif
       sourcePolicy(SAVE_SOURCE)
 {
 }
@@ -5584,6 +5603,9 @@
                                                     chars, length));
     if (!script)
         return false;
+#ifdef TxJS
+    script->setIntrospector(options.introspector);
+#endif
 
     JS_ASSERT(script->getVersion() == options.version);
 

