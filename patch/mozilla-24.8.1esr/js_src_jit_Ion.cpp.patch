--- ff-orig/mozilla-24.8.1esr/js/src/jit/Ion.cpp	2014-09-23 21:53:36.000000000 -0500
+++ ff-dev/mozilla-24.8.1esr/js/src/jit/Ion.cpp	2015-01-23 17:27:18.502951615 -0600
@@ -1610,6 +1610,12 @@
     JS_ASSERT(jit::IsIonEnabled(cx));
     JS_ASSERT((JSOp)*pc == JSOP_LOOPENTRY);
 
+#if 0//def TxJS
+    if (cx->getRunningTx()) {
+        ForbidCompilation(cx, script);
+        return Method_CantCompile;
+    }
+#endif
     // Skip if the script has been disabled.
     if (!script->canIonCompile())
         return Method_Skipped;
@@ -1663,6 +1669,12 @@
 {
     JS_ASSERT(jit::IsIonEnabled(cx));
 
+#if 0//def TxJS
+    if (cx->getRunningTx()) {
+        ForbidCompilation(cx, script);
+        return Method_CantCompile;
+    }
+#endif
     JSScript *script = state.script();
 
     // Skip if the script has been disabled.
@@ -1735,6 +1747,12 @@
     JS_ASSERT(!frame->fun()->nonLazyScript()->hasIonScript());
     JS_ASSERT(frame->isFunctionFrame());
 
+#if 0//def TxJS
+    if (cx->getRunningTx()) {
+        ForbidCompilation(cx, script);
+        return Method_CantCompile;
+    }
+#endif
     // Mark as forbidden if frame can't be handled.
     if (!CheckFrame(frame)) {
         ForbidCompilation(cx, script);
@@ -1755,6 +1773,12 @@
 MethodStatus
 jit::CanEnterInParallel(JSContext *cx, HandleScript script)
 {
+#if 0//def TxJS
+    if (cx->getRunningTx()) {
+        ForbidCompilation(cx, script);
+        return Method_CantCompile;
+    }
+#endif
     // Skip if the script has been disabled.
     //
     // Note: We return Method_Skipped in this case because the other
@@ -1800,6 +1824,12 @@
 {
     JS_ASSERT(jit::IsIonEnabled(cx));
 
+#if 0//def TxJS
+    if (cx->getRunningTx()) {
+        ForbidCompilation(cx, script);
+        return Method_CantCompile;
+    }
+#endif
     // Skip if the code is expected to result in a bailout.
     if (!script->hasIonScript() || script->ionScript()->bailoutExpected())
         return Method_Skipped;

