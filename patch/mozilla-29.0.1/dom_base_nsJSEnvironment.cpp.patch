--- ff-orig/mozilla-29.0.1/dom/base/nsJSEnvironment.cpp	2014-05-06 17:55:22.000000000 -0500
+++ ff-dev/mozilla-29.0.1/dom/base/nsJSEnvironment.cpp	2015-01-25 16:09:23.490992431 -0600
@@ -945,6 +945,18 @@
 
   return refcnt;
 }
+nsresult
+nsJSContext::EvaluateString(const nsAString& aScript,
+                            JS::Handle<JSObject*> aScopeObject,
+                            JS::CompileOptions& aCompileOptions,
+                            bool aCoerceToString,
+                            JS::Value* aRetValue,
+                            void **aOffThreadToken)
+{
+#ifdef TxJS
+  return EvaluateString(aScript, aScopeObject, aCompileOptions,
+      aCoerceToString, aRetValue, JS::UndefinedValue());
+}
 
 nsresult
 nsJSContext::EvaluateString(const nsAString& aScript,
@@ -952,12 +964,17 @@
                             JS::CompileOptions& aCompileOptions,
                             bool aCoerceToString,
                             JS::Value* aRetValue,
+                            const JS::Value &ispect,
                             void **aOffThreadToken)
 {
+#endif
   NS_ENSURE_TRUE(mIsInitialized, NS_ERROR_NOT_INITIALIZED);
   AutoCxPusher pusher(mContext);
   nsJSUtils::EvaluateOptions evalOptions;
   evalOptions.setCoerceToString(aCoerceToString);
+#ifdef TxJS
+  aCompileOptions.introspector = ispect;
+#endif
   return nsJSUtils::EvaluateString(mContext, aScript, aScopeObject,
                                    aCompileOptions, evalOptions, aRetValue,
                                    aOffThreadToken);

