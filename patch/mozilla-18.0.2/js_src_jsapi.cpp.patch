--- ff-orig/mozilla-18.0.2/js/src/jsapi.cpp	2013-02-01 09:02:31.000000000 -0600
+++ ff-dev/mozilla-18.0.2/js/src/jsapi.cpp	2015-01-19 15:57:54.747319310 -0600
@@ -90,6 +90,11 @@
 #include "ion/Ion.h"
 #endif
 
+#ifdef TxJS
+#include "jstransaction.h"
+#include "jsjam.h"
+#endif
+
 using namespace js;
 using namespace js::gc;
 using namespace js::types;
@@ -1798,6 +1803,12 @@
     {js_InitMapClass,                   EAGER_CLASS_ATOM(Map), &js::MapObject::class_},
     {js_InitSetClass,                   EAGER_CLASS_ATOM(Set), &js::SetObject::class_},
     {js_InitParallelArrayClass,         EAGER_CLASS_ATOM(ParallelArray), &js::ParallelArrayObject::class_},
+#ifdef TxJS
+    /* %%% What does the EAGER_ATOM_AND_CLASP mean? 
+       %%% Convert to &js::Tx::class_ following pattern. */
+    {js_InitTxClass,                    EAGER_CLASS_ATOM(Tx), &TxClass},
+    {js_InitJAMClass,                   EAGER_CLASS_ATOM(JAM), &JAMClass},
+#endif
     {NULL,                              0, NULL}
 };
 
@@ -3527,6 +3538,14 @@
     return true;
 }
 
+#ifdef TxJS
+JS_PUBLIC_API(jsval)
+JS_GetIntrospector(JSContext *cx)
+{
+  return cx->getIntrospector();
+}
+#endif
+
 static JSBool
 LookupPropertyById(JSContext *cx, HandleObject obj, HandleId id, unsigned flags,
                    MutableHandleObject objp, MutableHandleShape propp)
@@ -3808,7 +3827,6 @@
             JSFunction *setobj = JS_NewFunction(cx, (Native) setter, 1, 0, global, NULL);
             if (!setobj)
                 return false;
-
             if (set.info)
                 setobj->setJitInfo(set.info);
 
@@ -5007,7 +5025,6 @@
                 if (!ctor)
                     return JS_FALSE;
             }
-
             flags &= ~JSFUN_GENERIC_NATIVE;
             fun = js_DefineFunction(cx, ctor, id, js_generic_native_method_dispatcher,
                                     fs->nargs + 1, flags, NULL, JSFunction::ExtendedFinalizeKind);
@@ -5188,6 +5205,9 @@
       compileAndGo(cx->hasRunOption(JSOPTION_COMPILE_N_GO)),
       noScriptRval(cx->hasRunOption(JSOPTION_NO_SCRIPT_RVAL)),
       selfHostingMode(false),
+#ifdef TxJS
+      introspector(JS::UndefinedValue()),
+#endif
       sourcePolicy(SAVE_SOURCE)
 {
 }
@@ -5702,6 +5722,9 @@
     RootedScript script(cx, frontend::CompileScript(cx, obj, NULL, options, chars, length));
     if (!script)
         return false;
+#ifdef TxJS
+    script->setIntrospector(options.introspector);
+#endif
 
     JS_ASSERT(script->getVersion() == options.version);
 

