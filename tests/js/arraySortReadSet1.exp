0: [object global] / a / B,D,A,C
1: B,D,A,C / sort / function sort() {
    [native code]
}
2: [object global] / comp / function comp(v1, v2) {
  return -v1.toString().localeCompare(v2);
}
0: function comp(v1, v2) {
  return -v1.toString().localeCompare(v2);
} / apply / function apply() {
    [native code]
}
1: B,D / 0 / B
2: B,D / 1 / D
3: B / toString / function toString() {
    [native code]
}
0: B / localeCompare / function localeCompare() {
    [native code]
}
0: function comp(v1, v2) {
  return -v1.toString().localeCompare(v2);
} / apply / function apply() {
    [native code]
}
1: B,A / 0 / B
2: B,A / 1 / A
3: B / toString / function toString() {
    [native code]
}
0: B / localeCompare / function localeCompare() {
    [native code]
}
0: function comp(v1, v2) {
  return -v1.toString().localeCompare(v2);
} / apply / function apply() {
    [native code]
}
1: A,C / 0 / A
2: A,C / 1 / C
3: A / toString / function toString() {
    [native code]
}
0: A / localeCompare / function localeCompare() {
    [native code]
}
0: function comp(v1, v2) {
  return -v1.toString().localeCompare(v2);
} / apply / function apply() {
    [native code]
}
1: D,C / 0 / D
2: D,C / 1 / C
3: D / toString / function toString() {
    [native code]
}
0: D / localeCompare / function localeCompare() {
    [native code]
}
0: function comp(v1, v2) {
  return -v1.toString().localeCompare(v2);
} / apply / function apply() {
    [native code]
}
1: B,C / 0 / B
2: B,C / 1 / C
3: B / toString / function toString() {
    [native code]
}
0: B / localeCompare / function localeCompare() {
    [native code]
}
a: D,C,B,A
b: D,C,B,A
